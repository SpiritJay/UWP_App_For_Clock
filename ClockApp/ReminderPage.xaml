<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ClockApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:primitiveContract7Present="using:Microsoft.UI.Xaml.Controls.Primitives?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:Custom="using:Microsoft.Toolkit.Uwp.UI.Converters"
    x:Class="ClockApp.ReminderPage"
    mc:Ignorable="d">
    <Page.Resources>
        <Custom:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Flyout x:Key="SelectDisplayGroupFlyout" Placement="TopEdgeAlignedLeft" AreOpenCloseAnimationsEnabled="True">
            <Flyout.FlyoutPresenterStyle>
                <Style TargetType="FlyoutPresenter">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </Flyout.FlyoutPresenterStyle>
            <StackPanel Margin="5,0">
                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="选择你想显示的内容"/>
                <CheckBox x:Name="displayToDoCheckBox" Content="显示待办事项" IsThreeState="True" IsChecked="True"
                          Checked="SelectDisplayGroupCheckBox_Checked"
                          Unchecked="SelectDisplayGroupCheckBox_Unchecked"
                          Indeterminate="DisplayToDoCheckBox_Indeterminate"/>
                <CheckBox x:Name="displayUnfinishedCheckBox" Content="显示未完成事项" Margin="24,0,0,0" IsChecked="True"
                          Checked="SelectDisplayGroupCheckBox_Checked"
                          Unchecked="SelectDisplayGroupCheckBox_Unchecked"/>
                <CheckBox x:Name="displayFinishedCheckBox" Content="显示已完成事项" Margin="24,0,0,0" IsChecked="True"
                          Checked="SelectDisplayGroupCheckBox_Checked"
                          Unchecked="SelectDisplayGroupCheckBox_Unchecked"/>
                <CheckBox x:Name="displayAlarmClockCheckBox" Content="显示闹钟" IsChecked="True"
                          Checked="SelectDisplayGroupCheckBox_Checked"
                          Unchecked="SelectDisplayGroupCheckBox_Unchecked"/>
                <CheckBox x:Name="displayScheduleCheckBox" Content="显示日程"  IsChecked="True"
                          Checked="SelectDisplayGroupCheckBox_Checked"
                          Unchecked="SelectDisplayGroupCheckBox_Unchecked"/>
            </StackPanel>
        </Flyout>
        <Flyout x:Key="SelectDisplaySortFlyout" Placement="TopEdgeAlignedLeft" AreOpenCloseAnimationsEnabled="True">
            <Flyout.FlyoutPresenterStyle>
                <Style TargetType="FlyoutPresenter">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </Flyout.FlyoutPresenterStyle>
            <StackPanel>
                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="选择排序的规则" Margin="5,0,0,5"/>
                <ToggleMenuFlyoutItem x:Name="createTimeFirstMenuButton" Text="创建时间优先" IsChecked="False"
                                      Click="CreateTimeFirstMenuButton_Click"/>
                <ToggleMenuFlyoutItem x:Name="updateTimeFirstMenuButton" Text="修改时间优先" IsChecked="False"
                                      Click="UpdateTimeFirstMenuButton_Click"/>
                <ToggleMenuFlyoutItem x:Name="alarmTimeFirstMenuButton" Text="提醒时间优先" IsChecked="False"
                                      Click="AlarmTimeFirstMenuButton_Click"/>
            </StackPanel>
        </Flyout>
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}"/>
            <Setter Property="Background" Value="{ThemeResource TextControlBackground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}"/>
            <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}"/>
            <Setter Property="SelectionFlyout" Value="{StaticResource TextControlCommandBarSelectionFlyout}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundPointerOver}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundFocused}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Light"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="0" Content="{TemplateBinding Header}" Grid.ColumnSpan="2" Foreground="{ThemeResource TextControlHeaderForeground}" FontWeight="Normal" Margin="{ThemeResource TextBoxTopHeaderMargin}" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <Border x:Name="BorderElement" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Grid.Column="0" Grid.ColumnSpan="2" Control.IsTemplateFocusTarget="True" MinWidth="{ThemeResource TextControlThemeMinWidth}" MinHeight="{ThemeResource TextControlThemeMinHeight}" Grid.RowSpan="1" Grid.Row="1"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" Grid.Column="0" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                            <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.Column="0" Grid.ColumnSpan="2" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" Text="{TemplateBinding PlaceholderText}"/>
                            <ContentPresenter x:Name="DescriptionPresenter" AutomationProperties.AccessibilityView="Raw" Grid.Column="0" Content="{TemplateBinding Description}" Grid.ColumnSpan="2" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" x:Load="False"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="{ThemeResource ToggleButtonBackground}"/>
            <Setter Property="BackgroundSizing" Value="OuterBorderEdge"/>
            <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="{StaticResource ButtonPadding}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="-3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" CornerRadius="{TemplateBinding CornerRadius}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0.3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0.5"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonCheckedPointerOverBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0.8"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushChecked}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0.7"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0.9"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminate}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminate}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminate}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminateDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminateDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewStyle" TargetType="ListView">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="IsSwipeEnabled" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                        <ContentThemeTransition/>
                        <ReorderThemeTransition/>
                        <EntranceThemeTransition IsStaggeringEnabled="False"/>
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <ScrollViewer Style="{StaticResource ScrollViewerStyleForTemplate}" x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                          ViewChanged="ScrollViewer_ViewChanged">
                                <ItemsPresenter Footer="{TemplateBinding Footer}" FooterTemplate="{TemplateBinding FooterTemplate}" FooterTransitions="{TemplateBinding FooterTransitions}" HeaderTemplate="{TemplateBinding HeaderTemplate}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Header="{TemplateBinding Header}" Padding="{TemplateBinding Padding}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollViewerStyleForTemplate" TargetType="ScrollViewer">
            <Setter Property="HorizontalScrollMode" Value="Auto"/>
            <Setter Property="VerticalScrollMode" Value="Auto"/>
            <Setter Property="IsHorizontalRailEnabled" Value="True"/>
            <Setter Property="IsVerticalRailEnabled" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="ZoomMode" Value="Disabled"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ScrollingIndicatorStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="MouseIndicator" To="NoIndicator">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="MouseIndicatorFull" To="NoIndicator">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="MouseIndicatorFull" To="MouseIndicator">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                    <DiscreteObjectKeyFrame KeyTime="{ThemeResource ScrollViewerSeparatorContractDelay}">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="TouchIndicator" To="NoIndicator">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <ScrollingIndicatorMode>None</ScrollingIndicatorMode>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoIndicator"/>
                                    <VisualState x:Name="TouchIndicator">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>TouchIndicator</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseIndicator">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseIndicatorFull">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="IndicatorMode">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <ScrollingIndicatorMode>MouseIndicator</ScrollingIndicatorMode>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ScrollBarSeparatorStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="ScrollBarSeparatorExpanded" To="ScrollBarSeparatorCollapsed">
                                            <Storyboard>
                                                <DoubleAnimation BeginTime="{ThemeResource ScrollViewerSeparatorContractBeginTime}" Duration="{ThemeResource ScrollViewerSeparatorContractDuration}" Storyboard.TargetName="ScrollBarSeparator" To="0" Storyboard.TargetProperty="Opacity"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="ScrollBarSeparatorCollapsed"/>
                                    <VisualState x:Name="ScrollBarSeparatorExpanded">
                                        <Storyboard>
                                            <DoubleAnimation BeginTime="{ThemeResource ScrollViewerSeparatorExpandBeginTime}" Duration="{ThemeResource ScrollViewerSeparatorExpandDuration}" Storyboard.TargetName="ScrollBarSeparator" To="1" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ScrollBarSeparatorExpandedWithoutAnimation">
                                        <Storyboard>
                                            <DoubleAnimation BeginTime="{ThemeResource ScrollViewerSeparatorExpandBeginTime}" Duration="0" Storyboard.TargetName="ScrollBarSeparator" To="1" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ScrollBarSeparatorCollapsedWithoutAnimation">
                                        <Storyboard>
                                            <DoubleAnimation BeginTime="{ThemeResource ScrollViewerSeparatorContractBeginTime}" Duration="0" Storyboard.TargetName="ScrollBarSeparator" To="0" Storyboard.TargetProperty="Opacity"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter x:Name="ScrollContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" Grid.RowSpan="2"/>
                                <Grid Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" HorizontalAlignment="Right" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Margin="0,0,0,48"/>
                                <ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Grid.Row="1" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                <Border x:Name="ScrollBarSeparator" Background="{ThemeResource ScrollViewerScrollBarSeparatorBackground}" Grid.Column="1" Opacity="0" Grid.Row="1"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Name="WidthSliderTriangleStoryboard"
                    Completed="WidthSliderTriangleStoryboard_Completed">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="subToDoWidthSliderLeftTriangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="-22">
                    <SplineDoubleKeyFrame.KeySpline>
                        <KeySpline ControlPoint2="0.4,1" ControlPoint1="0.2,0.3"/>
                    </SplineDoubleKeyFrame.KeySpline>
                </SplineDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.7000000" Value="-15"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="subToDoWidthSliderRightTriangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="22">
                    <SplineDoubleKeyFrame.KeySpline>
                        <KeySpline ControlPoint2="0.4,1" ControlPoint1="0.2,0.3"/>
                    </SplineDoubleKeyFrame.KeySpline>
                </SplineDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.7000000" Value="15"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="WidthSliderHideTriangleStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="subToDoWidthSliderLeftTriangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="subToDoWidthSliderRightTriangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="WidthSliderPointerEnteredRepositionStoryboard"
                    Completed="WidthSliderPointerEnteredRepositionStoryboard_Completed">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="subToDoWidthSliderControl" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame x:Name="WidthSliderPointerEnteredRepositionAnimation" KeyTime="00:00:00.1500000"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="WidthSliderPointerExitedRepositionStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="subToDoWidthSliderControl" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                <EasingDoubleKeyFrame x:Name="WidthSliderPointerExitedRepositionAnimation" KeyTime="00:00:00"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="SubToDoToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="{ThemeResource ToggleButtonBackground}"/>
            <Setter Property="BackgroundSizing" Value="OuterBorderEdge"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="{StaticResource ButtonPadding}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="-3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" CornerRadius="{TemplateBinding CornerRadius}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundChecked}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundChecked}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushChecked}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="关闭小项列表"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="关闭小项列表"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="关闭小项列表"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushCheckedDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Content">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="关闭小项列表"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminate}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminate}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminate}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundIndeterminateDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushIndeterminateDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Page.Background>
        <ThemeResource ResourceKey="ApplicationPageBackgroundThemeBrush"/>
    </Page.Background>

    <Grid x:Name="grid">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!-- VisualState to be triggered when the window width is >=640 effective pixels. -->
                        <AdaptiveTrigger MinWindowWidth="643" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="issueList.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="issueListCommandBar.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="detailGrid.(Grid.Column)" Value="1"/>
                        <Setter Target="info.(Grid.Column)" Value="1"/>
                        <Setter Target="newItemButtonSeparator.Visibility" Value="Collapsed"/>
                        <Setter Target="newItemSaveButton.Margin" Value="4,5,2,5"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="325"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Background="White" Grid.Column="1">
            <StackPanel Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <SymbolIcon Symbol="Document" Margin="0,0,0,25" RenderTransformOrigin=".5,.5">
                    <SymbolIcon.RenderTransform>
                        <CompositeTransform ScaleX="2" ScaleY="2"/>
                    </SymbolIcon.RenderTransform>
                </SymbolIcon>
                <TextBlock Text="当前未选择任何项目" FontSize="30"/>
            </StackPanel>
        </Grid>
        <ListView Style="{StaticResource ListViewStyle}" x:Name="issueList" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" Background="#FFFAFAFA" Padding="0,0,0,48"
                  ItemsSource="{x:Bind Path=local:Common.reminderList}"
                  SelectionChanged="IssueList_SelectionChanged">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Height" Value="140"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="local:ReminderListItem">
                    <UserControl>
                        <Grid Height="140">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="issueListItemStates">
                                    <VisualState x:Name="Normal">
                                        <VisualState.Setters>
                                            <Setter Target="issueListItemInformationStackPanel.Opacity" Value="1"/>
                                            <Setter Target="finishTextBorder.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Finished">
                                        <VisualState.Setters>
                                            <Setter Target="issueListItemInformationStackPanel.Opacity" Value="0.3"/>
                                            <Setter Target="finishTextBorder.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="ToDoItemSelected">
                                        <VisualState.Setters>
                                            <Setter Target="finishCheckBox.IsEnabled" Value="false"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="ToDoItemUnSelected">
                                        <VisualState.Setters>
                                            <Setter Target="finishCheckBox.IsEnabled" Value="true"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Polygon Points="40,0 0,40 0,0" Fill="{Binding CornerColorBrush}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <FontIcon Glyph="{Binding Glyph}" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Left" Margin="15,0"/>
                            <StackPanel x:Name="issueListItemInformationStackPanel" Margin="50,8,5,8" Opacity="{Binding IsToDoFinishOpacity}">
                                <TextBlock Text="{Binding TitleString}" Style="{StaticResource SubtitleTextBlockStyle}" MaxLines="1" FontWeight="Bold"/>
                                <TextBlock Text="{Binding AlarmTimeString}" Style="{StaticResource SubtitleTextBlockStyle}" Width="215" FontFamily="DengXian" HorizontalAlignment="Left"/>
                                <!--在待办事项时不予显示-->
                                <StackPanel Orientation="Horizontal" Height="30" Visibility="{Binding LoopMarkStackPanelVisibility}">
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding LoopMarkStackPanelForScheduleVisibility}">
                                        <StackPanel VerticalAlignment="Center" CornerRadius="9" Height="18" Width="36" Background="{Binding CornerColorBrush}" Margin="3,0" Opacity="{Binding LoopListForSchedule[0].Opacity}">
                                            <TextBlock Text="每年" FontSize="10" Foreground="White" HorizontalTextAlignment="Center" Width="36" Height="16" Margin="0,1.5,0,0"/>
                                        </StackPanel>
                                        <StackPanel VerticalAlignment="Center" CornerRadius="9" Height="18" Width="36" Background="{Binding CornerColorBrush}" Margin="3,0" Opacity="{Binding LoopListForSchedule[1].Opacity}">
                                            <TextBlock Text="每月" FontSize="10" Foreground="White" HorizontalTextAlignment="Center" Width="36" Height="16" Margin="0,1.5,0,0"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding LoopMarkStackPanelForAlarmClockVisibility}">
                                        <StackPanel VerticalAlignment="Center" CornerRadius="9" Height="18" Width="18" Background="{Binding CornerColorBrush}" Margin="3,0" Opacity="{Binding LoopListForAlarmClock[1].Opacity}">
                                            <TextBlock Text="一" FontSize="10" Foreground="White" HorizontalTextAlignment="Center" Width="18" Height="16" Margin="0,1.5,0,0"/>
                                        </StackPanel>
                                        <StackPanel VerticalAlignment="Center" CornerRadius="9" Height="18" Width="18" Background="{Binding CornerColorBrush}" Margin="3,0" Opacity="{Binding LoopListForAlarmClock[2].Opacity}">
                                            <TextBlock Text="二" FontSize="10" Foreground="White" HorizontalTextAlignment="Center" Width="18" Height="16" Margin="0,1.5,0,0"/>
                                        </StackPanel>
                                        <StackPanel VerticalAlignment="Center" CornerRadius="9" Height="18" Width="18" Background="{Binding CornerColorBrush}" Margin="3,0" Opacity="{Binding LoopListForAlarmClock[3].Opacity}">
                                            <TextBlock Text="三" FontSize="10" Foreground="White" HorizontalTextAlignment="Center" Width="18" Height="16" Margin="0,1.5,0,0"/>
                                        </StackPanel>
                                        <StackPanel VerticalAlignment="Center" CornerRadius="9" Height="18" Width="18" Background="{Binding CornerColorBrush}" Margin="3,0" Opacity="{Binding LoopListForAlarmClock[4].Opacity}">
                                            <TextBlock Text="四" FontSize="10" Foreground="White" HorizontalTextAlignment="Center" Width="18" Height="16" Margin="0,1.5,0,0"/>
                                        </StackPanel>
                                        <StackPanel VerticalAlignment="Center" CornerRadius="9" Height="18" Width="18" Background="{Binding CornerColorBrush}" Margin="3,0" Opacity="{Binding LoopListForAlarmClock[5].Opacity}">
                                            <TextBlock Text="五" FontSize="10" Foreground="White" HorizontalTextAlignment="Center" Width="18" Height="16" Margin="0,1.5,0,0"/>
                                        </StackPanel>
                                        <StackPanel VerticalAlignment="Center" CornerRadius="9" Height="18" Width="18" Background="{Binding CornerColorBrush}" Margin="3,0" Opacity="{Binding LoopListForAlarmClock[6].Opacity}">
                                            <TextBlock Text="六" FontSize="10" Foreground="White" HorizontalTextAlignment="Center" Width="18" Height="16" Margin="0,1.5,0,0"/>
                                        </StackPanel>
                                        <StackPanel VerticalAlignment="Center" CornerRadius="9" Height="18" Width="18" Background="{Binding CornerColorBrush}" Margin="3,0" Opacity="{Binding LoopListForAlarmClock[0].Opacity}">
                                            <TextBlock Text="日" FontSize="10" Foreground="White" HorizontalTextAlignment="Center" Width="18" Height="16" Margin="0,1.5,0,0"/>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                                <!--待办事项时调整高度为68，Padding为0,5-->
                                <TextBlock Text="{Binding BodyString}" Style="{StaticResource BodyTextBlockStyle}" Opacity=".6" MaxLines="3" Height="{Binding BodyTextBlockHeight}" Padding="{Binding BodyTextBlockPadding}"/>
                            </StackPanel>
                            <CheckBox x:Name="finishCheckBox" Margin="0,-50,20,0" FlowDirection="RightToLeft" HorizontalAlignment="Right" IsChecked="{Binding IsToDoFinish, Mode=TwoWay}" Visibility="{Binding ToDoCheckBoxVisibility}" MinWidth="0" Width="24"
                                      Click="FinishCheckBox_Click"/>
                            <Border x:Name="finishTextBorder" Width="100" Height="100" CornerRadius="50" BorderBrush="Green" BorderThickness="4" HorizontalAlignment="Right" Margin="0,0,90,0" Visibility="{Binding IsToDoFinish, Converter={StaticResource BoolToVisibilityConverter}}">
                                <TextBlock Text="已完成" Foreground="Green" FontWeight="Bold" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <CompositeTransform Rotation="-20"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Border>
                        </Grid>
                    </UserControl>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <CommandBar x:Name="issueListCommandBar" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom" CornerRadius="5,5,0,0">
            <CommandBar.Background>
                <AcrylicBrush TintColor="White" TintOpacity="0.3"/>
            </CommandBar.Background>
            <AppBarButton x:Name="addNewItemButton" Icon="Add" Label="添加" ToolTipService.ToolTip="添加"
                              Click="AddNewItemButton_Click"/>
            <AppBarButton x:Name="deleteNewItemButton" Icon="Remove" Label="移除" ToolTipService.ToolTip="移除"
                              Click="DeleteNewItemButton_Click"/>
            <AppBarButton x:Name="selectDisplayGroupButton" Icon="List" Label="筛选" ToolTipService.ToolTip="筛选" Flyout="{StaticResource SelectDisplayGroupFlyout}"/>
            <AppBarButton x:Name="selectDiaplaySortButton" Icon="Sort" Label="排序" ToolTipService.ToolTip="排序" Flyout="{StaticResource SelectDisplaySortFlyout}"/>
        </CommandBar>
        <Grid x:Name="detailGrid" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Background="White" Visibility="Collapsed">
            <Grid.Resources>
                <Storyboard x:Name="detailGridInStory">
                    <SwipeHintThemeAnimation TargetName="detailGrid" ToHorizontalOffset="30" ToVerticalOffset="0"/>
                </Storyboard>
                <Storyboard x:Name="detailGridOutStory"
                            Completed="DetailGridOutStory_Completed">
                    <DoubleAnimation Storyboard.TargetName="detailGrid" Storyboard.TargetProperty="Opacity"
                                     From="1.0" To="0.0" Duration="0:0:0.5" AutoReverse="False"/>
                </Storyboard>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="36"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid x:Name="classificationColor" Grid.Row="0" Background="{x:Bind Path=local:ReminderPage.newItem.CornerColorBrush}"/>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <AppBarSeparator x:Name="newItemButtonSeparator" Grid.Column="0" Foreground="White" HorizontalAlignment="Left" Margin="48,0,0,0" Padding="2,8,3,8" Visibility="Visible"/>
                <Button x:Name="newItemSaveButton" Grid.Column="0" Width="56" Height="26" CornerRadius="4" BorderThickness="0" Background="Transparent" ToolTipService.ToolTip="保存" Margin="55.8,5,2,5"
                        Click="NewItemSaveButton_Click">
                    <SymbolIcon Symbol="Accept" Foreground="White"/>
                </Button>
                <AppBarSeparator Grid.Column="1" Foreground="White" Padding="2,8,3,8"/>
                <Button x:Name="newItemCancelButton" Grid.Column="2" Width="56" Height="26" CornerRadius="4" BorderThickness="0" Background="Transparent"  ToolTipService.ToolTip="取消" Margin="2,5"
                        Click="NewItemCancelButton_Click">
                    <SymbolIcon Symbol="Cancel" Foreground="White"/>
                </Button>
                <AppBarSeparator Grid.Column="3" Foreground="White" Padding="2,8,3,8"/>
            </Grid>
            <StackPanel Grid.Row="1" BorderBrush="{Binding Background, ElementName=classificationColor}" BorderThickness="0,0,0,1">
                <VariableSizedWrapGrid x:Name="wrapGrid" Orientation="Horizontal" ItemHeight="44" ItemWidth="5">
                    <ComboBox x:Name="classificationOfNewItem" VerticalAlignment="Center" HorizontalAlignment="Left" Width="120" Margin="5,0" VariableSizedWrapGrid.ColumnSpan="26" SelectedIndex="2"
                              SelectionChanged="ClassificationOfNewItem_SelectionChanged">
                        <ComboBoxItem Content="闹钟"/>
                        <ComboBoxItem Content="日程"/>
                        <ComboBoxItem Content="待办事项"/>
                    </ComboBox>
                    <DatePicker x:Name="datePickerOfNewItem" Margin="5,0" HorizontalAlignment="Left" VariableSizedWrapGrid.ColumnSpan="62"
                                SelectedDateChanged="DatePickerOfNewItem_SelectedDateChanged"/>
                    <TimePicker x:Name="timePickerOfNewItem" ClockIdentifier="24HourClock" Margin="5,0" HorizontalAlignment="Left" VariableSizedWrapGrid.ColumnSpan="51"/>
                    <StackPanel x:Name="loopForAlarmClockOfNewItem" Orientation="Horizontal" HorizontalAlignment="Left" VariableSizedWrapGrid.ColumnSpan="0">
                        <ToggleButton x:Name="toggle1" Style="{StaticResource ToggleButtonStyle}" Content="一" Background="{Binding Background, ElementName=classificationColor}" VerticalAlignment="Center" Height="24" Width="24" CornerRadius="12" BorderThickness="0" Foreground="White" Margin="5,0" Padding="0,0,0,3" IsChecked="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.LoopListForAlarmClock[1].IsChecked}"/>
                        <ToggleButton x:Name="toggle2" Style="{StaticResource ToggleButtonStyle}" Content="二" Background="{Binding Background, ElementName=classificationColor}" VerticalAlignment="Center" Height="24" Width="24" CornerRadius="12" BorderThickness="0" Foreground="White" Margin="5,0" Padding="0,0,0,3" IsChecked="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.LoopListForAlarmClock[2].IsChecked}"/>
                        <ToggleButton x:Name="toggle3" Style="{StaticResource ToggleButtonStyle}" Content="三" Background="{Binding Background, ElementName=classificationColor}" VerticalAlignment="Center" Height="24" Width="24" CornerRadius="12" BorderThickness="0" Foreground="White" Margin="5,0" Padding="0,0,0,3" IsChecked="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.LoopListForAlarmClock[3].IsChecked}"/>
                        <ToggleButton x:Name="toggle4" Style="{StaticResource ToggleButtonStyle}" Content="四" Background="{Binding Background, ElementName=classificationColor}" VerticalAlignment="Center" Height="24" Width="24" CornerRadius="12" BorderThickness="0" Foreground="White" Margin="5,0" Padding="0,0,0,3" IsChecked="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.LoopListForAlarmClock[4].IsChecked}"/>
                        <ToggleButton x:Name="toggle5" Style="{StaticResource ToggleButtonStyle}" Content="五" Background="{Binding Background, ElementName=classificationColor}" VerticalAlignment="Center" Height="24" Width="24" CornerRadius="12" BorderThickness="0" Foreground="White" Margin="5,0" Padding="0,0,0,3" IsChecked="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.LoopListForAlarmClock[5].IsChecked}"/>
                        <ToggleButton x:Name="toggle6" Style="{StaticResource ToggleButtonStyle}" Content="六" Background="{Binding Background, ElementName=classificationColor}" VerticalAlignment="Center" Height="24" Width="24" CornerRadius="12" BorderThickness="0" Foreground="White" Margin="5,0" Padding="0,0,0,3" IsChecked="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.LoopListForAlarmClock[6].IsChecked}"/>
                        <ToggleButton x:Name="toggle0" Style="{StaticResource ToggleButtonStyle}" Content="日" Background="{Binding Background, ElementName=classificationColor}" VerticalAlignment="Center" Height="24" Width="24" CornerRadius="12" BorderThickness="0" Foreground="White" Margin="5,0" Padding="0,0,0,3" IsChecked="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.LoopListForAlarmClock[0].IsChecked}"/>
                    </StackPanel>
                    <StackPanel x:Name="loopForScheduleOfNewItem" Orientation="Horizontal" HorizontalAlignment="Left" VariableSizedWrapGrid.ColumnSpan="0">
                        <ToggleButton x:Name="everyYearToggleButton" Style="{StaticResource ToggleButtonStyle}" Content="每年" Background="{Binding Background, ElementName=classificationColor}" VerticalAlignment="Center" Height="24" Width="48" CornerRadius="12" BorderThickness="0" Foreground="White" Margin="5,0" Padding="0,0,0,3" IsChecked="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.LoopListForSchedule[0].IsChecked}"
                                      Checked="EveryYearToggleButton_Checked"/>
                        <ToggleButton x:Name="everyMonthToggleButton" Style="{StaticResource ToggleButtonStyle}" Content="每月" Background="{Binding Background, ElementName=classificationColor}" VerticalAlignment="Center" Height="24" Width="48" CornerRadius="12" BorderThickness="0" Foreground="White" Margin="5,0" Padding="0,0,0,3" IsChecked="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.LoopListForSchedule[1].IsChecked}"
                                      Checked="EveryMonthToggleButton_Checked"/>
                    </StackPanel>
                    <Grid x:Name="subToDoListToggleButtonGrid" VariableSizedWrapGrid.ColumnSpan="24">
                        <ToggleButton x:Name="subToDoListToggleButton" Style="{StaticResource SubToDoToggleButtonStyle}" Content="打开小项列表" Margin="5,0"
                                      Click="SubToDoListToggleButton_Click"/>
                        <controls:InfoBadge x:Name="subToDoListTheRestCountInfoBadge" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,3,4,0" Value="0" Background="Orange"/>
                    </Grid>
                    
                </VariableSizedWrapGrid>
            </StackPanel>
            <TextBox x:Name="newItemTitleTextBlock" Style="{StaticResource TextBoxStyle}" Grid.Row="2" FontSize="30" Background="White" BorderThickness="0,0,0,1" CornerRadius="0"  PlaceholderText="在此处编写标题"
                     Text="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.TitleString}">
                <TextBox.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="White" Offset="0.01"/>
                        <GradientStop Color="LightGray" Offset="0.01"/>
                        <GradientStop Color="White" Offset="0.618"/>
                    </LinearGradientBrush>
                </TextBox.BorderBrush>
            </TextBox>
            <Grid x:Name="subToDoListGrid" Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ListView x:Name="subToDoListScrollViewer" Style="{StaticResource ListViewStyle}" Grid.Column="0" Width="260" MinWidth="0" MaxWidth="260" Padding="0,0,0,48" Background="#FFFFF7EC"
                          ItemsSource="{x:Bind local:ReminderPage.newItem.SubToDoList}" IsItemClickEnabled="True" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ElementName=subToDoListToggleButton}"
                          ItemClick="SubToDoListScrollViewer_ItemClick"
                          ContainerContentChanging="SubToDoListScrollViewer_ContainerContentChanging"
                          SelectionChanged="SubToDoListScrollViewer_SelectionChanged">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                            <Setter Property="Padding" Value="10,0"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="local:SubToDoListItem">
                            <UserControl Tapped="UserControl_Tapped" DoubleTapped="UserControl_DoubleTapped" IsDoubleTapEnabled="True">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="subToDoItemStates">
                                            <VisualState x:Name="Normal">
                                                <VisualState.Setters>
                                                    <Setter Target="subToDoItemTextBox.Visibility" Value="Collapsed"/>
                                                    <Setter Target="subToDoItemTextBlock.Visibility" Value="Visible"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Edit">
                                                <VisualState.Setters>
                                                    <Setter Target="subToDoItemTextBox.Visibility" Value="Visible"/>
                                                    <Setter Target="subToDoItemTextBlock.Visibility" Value="Collapsed"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Grid.Column="0" Height="20" Width="20" Margin="5,0" IsChecked="{x:Bind IsChecked, Mode=TwoWay}"/>
                                    <TextBlock x:Name="subToDoItemTextBlock" Grid.Column="1" Margin="2,5" Text="{x:Bind Content}" TextWrapping="Wrap" VerticalAlignment="Center"/>
                                    <TextBox x:Name="subToDoItemTextBox" Grid.Column="1" Margin="0,5" Text="{x:Bind Content, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" TextWrapping="Wrap" Background="White" Visibility="Collapsed"
                                             LostFocus="SubToDoItemTextBox_LostFocus"
                                             CharacterReceived="SubToDoItemTextBox_CharacterReceived"/>
                                </Grid>
                            </UserControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <CommandBar x:Name="subToDoListCommandBar" Grid.Column="0" VerticalAlignment="Bottom" CornerRadius="5,5,0,0" Width="{Binding Width, ElementName=subToDoListScrollViewer}" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ElementName=subToDoListToggleButton}">
                    <CommandBar.Background>
                        <AcrylicBrush TintOpacity="0"/>
                    </CommandBar.Background>
                    <CommandBar.Content>
                        <StackPanel Margin="0,8,0,0">
                            <TextBlock FontSize="12">
                                <Run Text="总数："/>
                                <Run x:Name="subToDoListCountTextBlock" Text="0"/>
                            </TextBlock>
                            <TextBlock FontSize="12">
                                <Run Text="未完成："/>
                                <Run x:Name="subToDoListRestTextBlock" Text="0"/>
                            </TextBlock>
                        </StackPanel>
                    </CommandBar.Content>
                    <ToolTipService.ToolTip>
                        <StackPanel>
                            <TextBlock FontSize="12">
                                <Run Text="总数："/>
                                <Run x:Name="subToDoListCountTextBlockInToolTip" Text="0"/>
                            </TextBlock>
                            <TextBlock FontSize="12">
                                <Run Text="未完成："/>
                                <Run x:Name="subToDoListRestTextBlockInToolTip" Text="0"/>
                            </TextBlock>
                        </StackPanel>
                    </ToolTipService.ToolTip>
                    <AppBarButton x:Name="subToDoListAddButton" Icon="Add" Label="添加" ToolTipService.ToolTip="添加"
                                  Click="SubToDoListAddButton_Click"/>
                    <AppBarButton x:Name="subToDoListDeleteButton"  Icon="Remove" Label="移除" ToolTipService.ToolTip="移除"
                                  Click="SubToDoListDeleteButton_Click"/>
                </CommandBar>
                <TextBox x:Name="newItemBodyTextBlock" Style="{StaticResource TextBoxStyle}" Grid.Column="1" Background="White" BorderThickness="0" CornerRadius="0" PlaceholderText="在此处编写内容"
                         Text="{x:Bind Mode=TwoWay, Path=local:ReminderPage.newItem.BodyString}"
                         TextWrapping="Wrap" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Auto" Padding="10"/>
                <Grid x:Name="subToDoListSliderGrid" Grid.Column="1" Width="20" HorizontalAlignment="Left" VerticalAlignment="Stretch" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ElementName=subToDoListToggleButton}"
                      PointerEntered="SubToDoListSliderGrid_PointerEntered"
                      PointerExited="SubToDoListSliderGrid_PointerExited">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FFFFEFD2" Offset="0.4"/>
                            <GradientStop Color="#FFFFE0A6" Offset="1"/>
                            <GradientStop Color="#FFFFE0A6" Offset="0"/>
                            <GradientStop Color="#FFFFEFD2" Offset="0.6"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid x:Name="subToDoWidthSliderControl" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <CompositeTransform/>
                        </Grid.RenderTransform>
                        <Polyline x:Name="subToDoWidthSliderLeftTriangle" Points="7,0 -0,5 7,9 7,0" Margin="-5,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="Orange" Fill="Orange" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" RenderTransformOrigin="0.5,0.5">
                            <Polyline.RenderTransform>
                                <CompositeTransform/>
                            </Polyline.RenderTransform>
                        </Polyline>
                        <Polyline x:Name="subToDoWidthSliderRightTriangle" Points="3,0 9,5 3,9 3,0" Margin="0,1,-5,0" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="Orange" Fill="Orange" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" RenderTransformOrigin="0.5,0.5">
                            <Polyline.RenderTransform>
                                <CompositeTransform/>
                            </Polyline.RenderTransform>
                        </Polyline>
                        <Grid x:Name="subToDoWidthSlider" Height="20" Width="20" CornerRadius="10" Background="Orange"
                              PointerPressed="SubToDoWidthSlider_PointerPressed">
                            <TextBlock Text="&lt; &gt;" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,2" FontSize="10" Foreground="White"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <controls:InfoBar x:Name="info" Grid.Column="0" Grid.ColumnSpan="2" IsOpen="False" IsIconVisible="True" IsClosable="True" CornerRadius="8" Margin="15">
            <controls:InfoBar.Resources>
                <Storyboard x:Name="infoBarOpen">
                    <SwipeHintThemeAnimation TargetName="info" Duration="00:00:1"/>
                </Storyboard>
            </controls:InfoBar.Resources>
        </controls:InfoBar>
    </Grid>
</Page>
